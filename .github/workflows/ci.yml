name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches:
      - '*'
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: ziraqyoung
          POSTGRES_DB: magz_test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.65.0
        with:
          ruby-version: 3.0.0
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -yqq libpq-dev build-essential libcurl4-openssl-dev
          gem install bundler

      - name: Install Gems and Yarn packages
        run: |
          bundle install --jobs 4 --retry 3
          yarn install --frozen-lockfile
          yarn build

      - name: Build and run tests
        env:
          REDIS_URL: redis://localhost:6379/0
          PGHOST: localhost
          POSTGRES_USER: ziraqyoung
          POSTGRES_DB: magz_test
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          cp config/database.ci.yml config/database.yml
          bundle exec rails db:prepare
          bundle exec rspec

